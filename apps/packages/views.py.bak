from rest_framework import viewsets, filters
from rest_framework.decorators import action
from rest_framework.response import Response
from .models import Package, ResidentPackageSubscription
from .serializers import PackageSerializer, ResidentPackageSubscriptionSerializer
from mkani.core.permissions import DynamicRolePermission

class PackageViewSet(viewsets.ModelViewSet):
    queryset = Package.objects.all()
    serializer_class = PackageSerializer
    permission_classes = [DynamicRolePermission]
    filter_backends = [filters.SearchFilter, filters.OrderingFilter]
    search_fields = ['name', 'price']
    ordering_fields = ['name', 'price']

    @action(detail=False, methods=['get'], permission_classes=[DynamicRolePermission])
    def recent(self, request):
        qs = self.get_queryset().order_by('-id')[:10]
        serializer = self.get_serializer(qs, many=True)
        return Response(serializer.data)


class ResidentPackageSubscriptionViewSet(viewsets.ModelViewSet):
    queryset = ResidentPackageSubscription.objects.all()
    serializer_class = ResidentPackageSubscriptionSerializer
    permission_classes = [DynamicRolePermission]
    filter_backends = [filters.SearchFilter, filters.OrderingFilter]
    search_fields = ['id']
    ordering_fields = ['id']

    @action(detail=False, methods=['get'], permission_classes=[DynamicRolePermission])
    def recent(self, request):
        qs = self.get_queryset().order_by('-id')[:10]
        serializer = self.get_serializer(qs, many=True)
        return Response(serializer.data)

